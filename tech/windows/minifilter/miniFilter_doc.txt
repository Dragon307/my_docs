
-----------------------------------------------------------------------------

Windows Driver Samples

https://github.com/Microsoft/Windows-driver-samples.git

minifilter 的例子代码在 /filesys/miniFilter 下面。

-----------------------------------------------------------------------------

Windows SDK 下载

https://developer.microsoft.com/zh-cn/windows/downloads/sdk-archive

目前最新的Windows SDK 版本是：Windows 10 SDK (10.0.14393.0)

注：Windows SDK 和 Windows Driver Kit (WDK) 版本号必须要一致，而且必须先装 Windows SDK 再装 WDK，否则 VisualStudio 无法正常使用新安装的 WDK ！

-----------------------------------------------------------------------------

Windows Driver Kit (WDK) 介绍和向导

https://msdn.microsoft.com/en-us/library/windows/hardware/ff557573(v=vs.85).aspx

Windows Driver Kit -- Windows 驱动程序工具包 (WDK)

https://developer.microsoft.com/zh-cn/windows/hardware/windows-driver-kit

目前最新的Windows SDK 版本是：Windows 10 WDK (10.0.14393.0)

-----------------------------------------

Windows Driver Kit (WDK) 10.0.x (适用于 VS 2015)

https://go.microsoft.com/fwlink/p/?LinkId=526733

支持的操作系统：

Windows 10
Windows 8.1
Windows 8
Windows 7
Windows Server 2016
Windows Server 2008 R2

WDK 8.1.x (适用于 Windows 8.1、8 和 7 驱动程序, 适用于 VS 2013)

https://go.microsoft.com/fwlink/p/?LinkId=393659

WDK 7.1.0（适用于 Windows XP 驱动程序)

https://www.microsoft.com/download/confirmation.aspx?id=11800

GRMWDK_EN_7600_1.ISO

https://download.microsoft.com/download/4/A/2/4A25C7D5-EFBE-4182-B6A9-AE6850409A78/GRMWDK_EN_7600_1.ISO

-----------------------------------------------------------------------------

File System Minifilter Drivers

https://msdn.microsoft.com/en-us/windows/hardware/drivers/ifs/file-system-minifilter-drivers

微软 minifilter 的官方文档首页

-----------------------------------------------------------------------------

Windows文件系统过滤管理器之微过滤器驱动开发指南

http://blog.csdn.net/celestialwy/article/details/694044

简单评价：转载的文章，编辑得还不错。挺长的，内容比较繁杂，不太容易懂，需要有基础才能看懂，但也可以看看。


节选：

此文的原文是《Filter Driver Development Guide》，出自微软的网站。我在以下这个地址下载得到此文:

http://download.microsoft.com/download/e/b/a/eba1050f-a31d-436b-9281-92cdfeae4b45/FilterDriverDeveloperGuide.doc

我尽量在翻译中使文章保持原貌。如果您认为此文无法理解，建议您首先阅读旧的文件过滤驱动的相关资料。我认为必须有文件系统和windows驱动的相关知识，才能阅读此文。


-----------------------------------------------------------------------------

MiniFilter文件系统学习

http://blog.csdn.net/zhuhuibeishadiao/article/details/51229122

简单评价：还不错，各种文章整理在一起，稍微有点杂乱，但覆盖面比较广，值得一看。

-----------------------------------------------------------------------------

'fltKernel.h' missing when trying to build driver Visual Studio 2012?

http://stackoverflow.com/questions/31859483/fltkernel-h-missing-when-trying-to-build-driver-visual-studio-2012

Folder: C:\Program Files (x86)\Windows Kits\8.0\Include\km

I assume that's with the Windows 8 WDK? Just make sure that the header was installed in your kits header directory ("C:\Program Files (x86)\Windows Kits\8.0\Include\km"). Also note that fltKernel.h is a kernel mode header, so you can only include it in kernel mode driver projects.

If the header is missing from your installation, I'd recommend reinstalling the WDK. If it is not missing and it still isn't found for some reason, you could try manually adding its absolute path to your list of included headers to see if it fixes the issue. If that works (it should), then you can figure out why it was missing from your include path in the first place.


-----------------------------------------------------------------------------

Minifilter微过滤框架：框架介绍以及驱动层和应用层的通讯

http://blog.csdn.net/arvon2012/article/details/7926366

简单评价：还不错，文章不长，比较初级的介绍，可以看看。

其他转载地址：http://www.cnblogs.com/findumars/p/6012381.html


节选：

minifilter是sfilter后微软推出的过滤驱动框架。相比于sfilter，他更容易使用，需要程序员做的编码更简洁。

系统为minifilter专门制作了一个过滤管理器，这个管理器本身其实是一个传统过滤驱动，它向minifilter的使用者提供许多接口，让原本复杂的文件过滤驱动变得方便简单。之所以简单是因为传统的过滤驱动把大量的工作放在绑定设备上，而现在这些工作都交给minifilter中的过滤管理器来完成。

缺点：纯粹的使用minifilter提供的接口看不见设备对象和IRP的，所以编程自由度不大。


对minifilter的编写的第一步是向过滤管理器注册一个微过滤器，这个未过滤器是一个组件，包含了一些在文件操作的时候可能需要的回调函数。

驱动入口中最简单的版本是只包含两个函数：注册函数和开始函数。


-----------------------------------------------------------------------------

Minifilter的动态安装、加载及卸载

http://www.cnblogs.com/js2854/archive/2011/04/03/sysload.html

简单评价：如题，Minifilter驱动的动态安装，加载和卸载，评论里有讨论自动启动的处理方法。

-----------------------------------------------------------------------------

[MiniFilter]驱动隐藏文件夹的实现（支持Win7）

http://www.cnblogs.com/js2854/archive/2010/11/03/HideDir.html

说明：WinXP 和 Win7 以上版本的代码是不一样。

-----------------------------------------------------------------------------

File System Minifilter Drivers（文件系统微型过滤驱动）入门

http://www.cnblogs.com/monotone/p/4184219.html

-----------------------------------------------------------------------------

Windows Minifilter驱动 - 加载顺序 （2）

http://blog.csdn.net/zj510/article/details/39345479

驱动启动类型

看MSDN: http://msdn.microsoft.com/en-us/library/windows/hardware/ff557272(v=vs.85).aspx

vs2013默认使用的是SERVICE_DEMAND_START。 也就是说系统重启后minifilter不会被加载。需要通过Pnp管理器或者SCM来启动。比如使用命令sc start myminifilter。

当windows启动的时候，SERVICE_BOOT_START和SERVICE_SYSTEM_START的minifilter驱动会被自动加载。SERVICE_BOOT_START比SERVICE_SYSTEM_START的驱动更早被加载。MSDN:However, no system-start driver is loaded until after all boot drivers have been loaded.

对于同一种类型的驱动，加载顺序就看他们所属的组了。

-----------------------------------------------------------------------------

Windows Minifilter驱动 - 获取进程ID, 进程名字和线程ID （5）

http://blog.csdn.net/zj510/article/details/39476171

-----------------------------------------------------------------------------

Win10 下 VS2015（WDK10）驱动开发环境配置

http://blog.csdn.net/liuyez123/article/details/50857621

简单评价：有较为详细的使用 VS2015(WDK 10) 连接远程调试机（或虚拟机）的步骤介绍。

-----------------------------------------------------------------------------

MSDN 上关于 WinDBG 的手册

http://www.cnblogs.com/long123king/p/3875145.html

这其实是 WinDBG 的命令一览表，还不错，不过命令说明是英文的。

分类：

Basic Commands
Meta commands
Kernel Mode Extensions
General Extensions
User Mode Extensions

据说是参考这个网址的：

http://msdn.microsoft.com/en-us/library/windows/hardware/ff540507(v=vs.85).aspx

-----------------------------------------------------------------------------

Windows 内核调试 WinDBG 原理浅析 

http://dragonsn.bokee.com/502510.html

转载版本：

http://blog.csdn.net/zht_304/article/details/5726492

-----------------------------------------------------------------------------

WinDBG 实时打印 Windows 驱动或者内核信息的方法
http://blog.csdn.net/md521/article/details/37704363

在下面一点，有详细的提要说明。

-----------------------------------------------------------------------------

在 Windows 7 用 WinDBG 调试时显示 KdPrint 信息

http://blog.chinaunix.net/uid-701988-id-373702.html

在注册表 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager 下面，
新建一项 Debug Print Filter，
新建一个DWORD值，名称为 “DEFAULT”，(注意：必须全部是大写)
值为8。

重启操作系统即可。

例如：

[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Debug Print Filter]
"DEFAULT"=dword:00000008

其他操作系统
----------------

WinXP:

[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Debug Print Filter]
"DEFAULT"=dword:00000008

Vista:

[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Debug Print Filter]
"DEFAULT"=dword:0000000f

Windows 7:

[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Debug Print Filter]
"DEFAULT"=dword:ffffffff

-----------------------------------------------------------------------------

在 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Debug Print Filter 下面：

新建 DEFAULT（DWORD类型）：

DEFAULT  0x08       输出 xxx_INFO_LEVEL, xxx_ERROR_LEVEL 信息

DEFAULT  0x0f       输出所有级别的信息

DEFAULT  0xffffffff 输出所有的信息

修改后，系统要重启才能生效

-----------------------------------------------------------------------------

WinDBG 实时打印 Windows 驱动或者内核信息的方法

http://blog.csdn.net/md521/article/details/37704363

当我们用 WinDBG 调试 Windows 驱动或者内核时，总是需要查看相关 Log 信息，那么如何在WinDBG中实时打印 Windows 驱动或者内核信息呢？

Windows 驱动包提供了驱动或者内核打印接口：DbgPrintEx.

对于 KMDF 驱动(内核态驱动)，对应的打印接口是 KdPrint 或者 KdPrintEx，其实这两个接口是 DbgPrintEx 的特殊类型或者特殊定义而已。
对于 UMDF 驱动(用户态驱动)，没有专门的打印接口，可以使用 DbgPrint(DbgPrintEx的特殊定义)，或者直接使用 DbgPrintEx 接口，当然还可以使用 Win32 的调试接口 OutputDebugString。

不过，当用 WinDBG 调试 Windows 驱动或者内核时，如何让上述打印接口实时的显示在WinDBG的调试窗口呢?

1. 打开 WinDBG 调试软件，新建内核调试 WorkSpace(CTRL + K)；
2. 加载 Windows 驱动或者内核符号表文件(CTRL + S);
3. 在上述步骤中，选择符号表所载的文件夹，然后选中 Reload ，确定；

4. 当 WinDBG 调试窗口加载符号表未出现错误信息时，在 WinDBG 中命令行中输入以下命令：

    ed kd_default_mask 0xffffffff       // 不区分大小写，用于打开 Windows 驱动或者内核调试筛选器、

5. 在 WinDBG 命令行输入g，回车运行。
6. 此时如果 WinDBG 没有任何错误信息，并且调试的正好是相关 Windows 驱动程序或者内核时，就会输出 Debug 信息。

-----------------------------------------------------------------------------

Windbg 下无法显示 DbgPrint 输出的信息

http://blog.csdn.net/happy987818/article/details/50516236

有对 DbgPrintEx() 函数的详细参数说明，同时也转载了别人在 Vista 系统下的分析及解决过程，总得来说值得一看。

转载地址，Vista 下的分析及解决过程：http://blog.csdn.net/xw_1120/article/details/5055030

总结如下：

1、Win7/Vista 下确实需要修改调试信息过滤的键值（不知道我为什么没成功- -），而且该修改竟然存在 wxp 和 wlh 两个版本（网站上并无说明），如果自己修改不成功可以借助别人做的工具。

2、修改过键值后，DbgPrintEx() 函数用于 WDM 驱动调试信息的编写，而 DbgPrint() 函数用于 NT 驱动。

3、关于 DbgPrintEx() 在 WDM 驱动源代码下有时会无法链接成功的问题，上面已有说明，解决方法是将“DRIVERTYPE=WDM”一句删掉。

4、关于 build 工具，使用不同版本要配合相应的键值的修改，这样才能成功打印调试信息。

-----------------------------------------------------------------------------

Debugger 里面如何得到 DbgPrintEx 的输出

http://advdbg.org/forums/2269/ShowPost.aspx

你是在Driver里面用的DbgPrintEx,我当时是断在了ntdll!DbgPrintEx里面了,我跟了一下,发现,这个里面确实有一个filter的,就是后面这个,ntdll!NtQueryDebugFilterState,后者是一个SysCall,根据DbgPrintEx的参数ComponentId来做Mask, 貌似设置nt!Kd_WIN2000_Mask成0xffffffff后,所有的component都不会被mask,也就会被show出来了.

-----------------------------------------------------------------------------

DbgPrintEx 的执行流程和参数说明：
http://blog.csdn.net/vins_security_lab/article/details/47294225

    DbgPrintEx(DPFLTR_FASTFAT_ID, DPFLTR_ERROR_LEVEL, "Error!\n");
    DbgPrintEx(DPFLTR_FASTFAT_ID, DPFLTR_WARNING_LEVEL, "Warning!\n");
    DbgPrintEx(DPFLTR_FASTFAT_ID, DPFLTR_TRACE_LEVEL, "Trace!\n");
    DbgPrintEx(DPFLTR_FASTFAT_ID, DPFLTR_INFO_LEVEL, "Info!\n");

    DbgPrintEx(DPFLTR_FASTFAT_ID, DPFLTR_BEFORE_LEVEL, "Before!\n");
    DbgPrintEx(DPFLTR_FASTFAT_ID, DPFLTR_MIDDLE_LEVEL, "Middle!\n");
    DbgPrintEx(DPFLTR_FASTFAT_ID, DPFLTR_AFTER_LEVEL, "After!\n");

------------------------------------------------------

WinDBG 实时打印 Windows 驱动或者内核信息的方法

http://blog.csdn.net/md521/article/details/37704363

(上面有个版本，有更详细的摘要)

4. 当 WinDBG 调试窗口加载符号表未出现错误信息时，在 WinDBG 中命令行中输入以下命令：

   ed kd_default_mask 0xffffffff       // 不区分大小写，用于打开Windows驱动或者内核调试筛选器

------------------------------------------------------

minispy!DriverEntry

1: kd> eb nt!Kd_WIN2000_Mask 0

1: kd> dyd nt!Kd_WIN2000_Mask
           3          2          1          0
          10987654 32109876 54321098 76543210
          -------- -------- -------- --------
82948bbc  00000000 00000000 00000000 00000000  00000000

1: kd> eb nt!Kd_FASTFAT_Mask 0y1010000

1: kd> dyd nt!Kd_FASTFAT_Mask
           3          2          1          0
          10987654 32109876 54321098 76543210
          -------- -------- -------- --------
82956f2c  00000000 00000000 00000000 01010000  00000050

------------------------------------------------------

dyd nt!Kd_WIN2000_Mask

dyd nt!Kd_DEFAULT_Mask
dyd nt!Kd_FASTFAT_Mask

0: kd> dyd nt!Kd_DEFAULT_Mask
           3          2          1          0
          10987654 32109876 54321098 76543210
          -------- -------- -------- --------
83d4aec8  11111111 11111111 11111111 11111111  ffffffff

dyd nt!Kd_FLTMGR_Mask

0: kd> dyd nt!Kd_FLTMGR_Mask
           3          2          1          0
          10987654 32109876 54321098 76543210
          -------- -------- -------- --------
83d4adf0  00000000 00000000 00000000 00000000  00000000

eb nt!Kd_FLTMGR_Mask 0y1010000

eb nt!Kd_FLTMGR_Mask 0y11111111   (用于使用的是 eb 命令，最大只能8个bit)

ed nt!Kd_FLTMGR_Mask 0xffffffff

-----------------------------------------------------------------------------

先复制一份当前的启动配置：

C:\> bcdedit copy {current} "Windows 7 Debug With Serial"

会显示如下信息：
The entry was successfully copied to {cafcc464-ccc7-11e6-97a2-98d472d6dd37}.

注：除了{current}以外，还有个变量是{default}。

然后打开新启动配置的调试模式，下面这两个命令是等价的：

C:\> bcdedit /debug {cafcc464-ccc7-11e6-97a2-98d472d6dd37} on
C:\> bcdedit /set {cafcc464-ccc7-11e6-97a2-98d472d6dd37} debug yes

设置允许测试驱动签名（即不强制检测是否为微软正规的驱动签名）：
C:\> bcdedit /set {cafcc464-ccc7-11e6-97a2-98d472d6dd37} testsigning on

或者启动的时候按 F8，选项中选择“不检测驱动签名”。

C:\> bcdedit /dbgsettings {cafcc464-ccc7-11e6-97a2-98d472d6dd37} serial debugport:1 baudrate:115200

debugport:1 表示使用 COM1 接口。

查看 debug 设置：

C:\> bcdedit /dbgsettings {cafcc464-ccc7-11e6-97a2-98d472d6dd37}

如果使用的是 HyperV 虚拟机,可以这样设置:

C:\> bcdedit /hypervisorsettings {cafcc464-ccc7-11e6-97a2-98d472d6dd37} serial debugport:1 baudrate:115200

debugport:1 表示使用 COM1 接口。

查看当前的启动加载器的配置:

C:\> bcdedit /enum {current}

Windows 启动加载器
-------------------
标识符                  {current}
device                  partition=C:
path                    \Windows\system32\winload.exe
description             Windows 7 Debug With Serial
locale                  zh-CN
inherit                 {bootloadersettings}
recoverysequence        {cafcc462-ccc7-11e6-97a2-98d472d6dd37}
recoveryenabled         Yes
testsigning             Yes
osdevice                partition=C:
systemroot              \Windows
resumeobject            {cafcc460-ccc7-11e6-97a2-98d472d6dd37}
nx                      OptIn
debug                   Yes

列出所有启动管理器和启动加载器的信息：

C:\> bcdedit /enum

-----------------------------------------------------------------------------

示例:

C:\> bcdedit /copy {current} /d "Windows 7 Debug With Serial"
已将该项成功复制到 {cafcc464-ccc7-11e6-97a2-98d472d6dd37}。

C:\> bcdedit /debug {cafcc464-ccc7-11e6-97a2-98d472d6dd37} on
操作成功完成。

C:\> bcdedit /dbgsettings
debugtype               Serial
debugport               1
baudrate                115200
操作成功完成。

C:\Windows\system32>

-----------------------------------------------------------------------------

开机按 F8，可以选择“跳过驱动签名”。

关闭强制驱动签名的命令为:

bcdedit.exe -set loadoptions DDISABLE_INTEGRITY_CHECKS

See: https://zhidao.baidu.com/question/628350255653791564.html

-----------------------------------------------------------------------------

转载: 循序渐进学Minifilter（微过滤器） 之 一 （开篇）

http://blog.csdn.net/lostspeed/article/details/9234887

KdBreakPoint();

-----------------------------------------------------------------------------

【原创】minifilter通讯之简单示例之一

http://bbs.pediy.com/showthread.php?t=186931

/*
  这里要注意:
    1. 数据地址的对齐.
    2. 文档建议使用:try/except处理.
    3. 如果是64位的驱动要考虑32位的EXE发来的请求.
*/

-----------------------------------------------------------------------------

WDK Minifilter 自带示例的简要说明

http://blog.csdn.net/jykj_007/article/details/5421397

-----------------------------------------------------------------------------

WinDBG + VM 调试环境的搭建 

http://blog.csdn.net/eric491179912/article/details/6090472

其实还不错，虽然没有什么用，但很多我想说的，他也说到了，写文章的话值得参考一下一些内容。

例如：

3. 我可以在GuestOS的boot.ini文件更改那个COM口吗？比如把COM1改为COM2？ （郭子注：这一点并不一定正确，待求证，至少 VirtualBox 里不一定是这样的。）

不可以的，VMware会把虚拟出的这个COM口总是定义为com1。GuestOS的其他COM口都得让位。

7. 一定要这样创建一个WinDBG的快捷方式才能进行调试吗？

不是的，我们完全可以先正常运行WinDBG，然后选择菜单“File”--->“Kernel Debug...”，然后会弹出以下对话框：

-----------------------------------------------------------------------------


